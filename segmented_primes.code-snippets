{
    "segmented primes": {
        "prefix": "segmented_primes",
        "body": [
            "vector<int> primes;\r",
            "#define MAXN 100000\r",
            "const int MAXPR = MAXN;\r",
            "void calcPrimes() {\r",
            "    const int S = round(sqrt(MAXPR));\r",
            "    vector<bool> sieve(S + 1, true);\r",
            "    vector<array<int, 2>> cp;\r",
            "    primes.push_back(2);\r",
            "    for (int i = 3; i < S; i += 2) {\r",
            "        if (!sieve[i])\r",
            "            continue;\r",
            "        cp.push_back({i, (i * i - 1) / 2});\r",
            "        for (int j = i * i; j <= S; j += 2 * i)\r",
            "            sieve[j] = false;\r",
            "    }\r",
            "    vector<char> block(S);\r",
            "    int high = (MAXPR - 1) / 2;\r",
            "    for (int low = 0; low <= high; low += S) {\r",
            "        fill(block.begin(), block.end(), true);\r",
            "        for (auto &i : cp) {\r",
            "            int p = i[0], idx = i[1];\r",
            "            for (; idx < S; idx += p)\r",
            "                block[idx] = false;\r",
            "            i[1] = idx - S;\r",
            "        }\r",
            "        if (low == 0)\r",
            "            block[0] = false;\r",
            "        for (int i = 0; i < S && low + i <= high; i++)\r",
            "            if (block[i])\r",
            "                primes.push_back((low + i) * 2 + 1);\r",
            "    };\r",
            "}"
        ],
        "description": "list of primes"
    }
}