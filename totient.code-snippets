{
    "calculate co-primes to n upto n": {
        "prefix": "totient",
        "body": [
            "#define MAXN 100000\r",
            "#define MAXPR 100000\r",
            "bool sieve[MAXPR];\r",
            "int phi[MAXPR];\r",
            "vector<int> primes;\r",
            "void calcPrimes() {\r",
            "    for (int i = 2; i < MAXPR; i++) {\r",
            "        if (!sieve[i])\r",
            "            primes.push_back(i);\r",
            "        for (int j = 0; j < primes.size() && i * primes[j] < MAXPR; j++) {\r",
            "            sieve[primes[j] * i] = true;\r",
            "            if (i % primes[j] == 0)\r",
            "                break;\r",
            "        }\r",
            "    }\r",
            "}\r",
            "\r",
            "\r",
            "void calcTotient() {\r",
            "    phi[1] = 1;\r",
            "    for (int i = 2; i < MAXPR; i++) {\r",
            "        if (!sieve[i]) {\r",
            "            primes.push_back(i);\r",
            "            phi[i] = i - 1;\r",
            "        }\r",
            "        for (int j = 0; j < primes.size() && i * primes[j] < MAXPR; j++) {\r",
            "            sieve[i * primes[j]] = true;\r",
            "            if (i % primes[j] == 0) {\r",
            "                phi[i * primes[j]] = phi[i] * primes[j];\r",
            "                break;\r",
            "            }\r",
            "            phi[i * primes[j]] = phi[i] * phi[primes[j]];\r",
            "        }\r",
            "    }\r",
            "}"
        ],
        "description": "it will calcluate the no of coprime no's upto given no to a given no"
    }
}